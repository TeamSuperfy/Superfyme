package de.enterprise.lokaAndroid.services;

import android.graphics.Bitmap;
import android.location.Location;
import android.os.Handler;
import de.enterprise.lokaAndroid.services.MyService.MapMode;
import de.enterprise.lokaServer.pojos.CommentNewPojo;
import de.enterprise.lokaServer.pojos.GroupPojo;
import de.enterprise.lokaServer.pojos.MessagePojo;
import de.enterprise.lokaServer.pojos.NotificationPojo;
import de.enterprise.lokaServer.pojos.PostNewPojo;
import de.enterprise.lokaServer.pojos.UserPojo;

public interface IMyService {
	Location getLocation();
	void orderPosts(String jsonOrder);
	void registerListener(String cmd, Handler handler);
	void unregisterListener(String cmd, Handler handler);
	UserPojo getUser();
	void sendPost(PostNewPojo post);
	void orderPostsList();
	void orderTinyPictures(Integer[] picIDs);
	void orderThumbnailPictures(Integer[] picIDs);
	void orderBigPicture(int picIDs);
	void sendNewComment(CommentNewPojo cmt);
	void rateItem(boolean post, int id, boolean good);
	void addImageToCache(int picID, Bitmap b, int size);
	Bitmap getImage(int picID, int size);
	boolean isImageCached(int picID, int size);
	void requestComments(int postID);
	void clearImageCache();
	void orderMessages(int otherUID, int postID, int commentID);
	void orderNotifications();
	void checkForNews();
	void orderSinglePost(int postID);
	void readNotification(int notifID);
	void readMessage(int messID);
	void deleteNotifications(NotificationPojo[] notifsArray);
	void reportUser(int userID, int postID, int commID);
	void deletePost(int postID);
	void sendMessage(MessagePojo mp);
	void deleteMessages(Integer[] messIDs);
	void requestGroups(Integer[] groupIDs);
	void setSelectedGroup(GroupPojo group);
	GroupPojo getSelectedGroup();
	void checkGroupName(String groupName, String place);
	void createGroup(GroupPojo gp);
	boolean updateUser(UserPojo user);
	void joinGroup(int id);
	void searchGroups(String name, String place, boolean isPublic);
	void deleteAllMessages();
	void orderMessageTrunks();
	void orderBigPictures(Integer[] requiredPicIDs);
	void setSearchWord(String string);
	String getSearchWord();
	void leaveGroup(int groupID);
	void deleteGroup(int groupID);
	void banUserFromGroup(int groupID, int userID);
	void removeFromOrderList(int picID, int size);
	void orderLatestComments(Integer[] postIDs);
	void sendFeedback(String feedback);
	void getUserUpdate();
	void deleteComment(int commentID);
	void setLastLocation(Location loc);
	void resetRequests();
	void newUser(String username, Bitmap profilepic);
	Bitmap getIconPic(int picID);
	void saveUserPic(int picID, Bitmap bmp);
	void saveGroupPic(int picID, Bitmap bmp);
	void setMapMode(MapMode mm);
	MapMode getMapMode();
	void orderGroups(String json);
	void requestUserPojos(Integer[] users);
	void removeUserFromGroup(int groupID, int userID);
	void inviteUser(int groupID, String string);
	void deleteGroupInvitation(int groupID, int userID);
	void clearDB();
	String getCachedJSON(String key);
	void cacheJSON(String key, String val);
}
